# Generated by Django 5.0.12 on 2025-03-03 20:28

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=255)),
                ('codename', models.CharField(db_collation='Ukrainian_CI_AS', max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(db_collation='Ukrainian_CI_AS', max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.BooleanField()),
                ('username', models.CharField(db_collation='Ukrainian_CI_AS', max_length=150, unique=True)),
                ('first_name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=150)),
                ('last_name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=150)),
                ('email', models.CharField(db_collation='Ukrainian_CI_AS', max_length=254)),
                ('is_staff', models.BooleanField()),
                ('is_active', models.BooleanField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BodyType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body_type_name', models.CharField(db_column='BodyTypeName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'BodyType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('manufacture_year', models.IntegerField(blank=True, db_column='ManufactureYear', null=True)),
                ('note', models.CharField(blank=True, db_column='Note', max_length=255, null=True)),
                ('vin', models.CharField(blank=True, db_column='VIN', max_length=17, null=True, unique=True)),
                ('mileage', models.IntegerField(blank=True, db_column='Mileage', null=True)),
            ],
            options={
                'db_table': 'Car',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(db_column='BrandName', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'CarBrand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='CarModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('model_name', models.CharField(db_column='ModelName', max_length=100, unique=True)),
                ('dimensions', models.CharField(blank=True, db_column='Dimensions', max_length=35, null=True)),
            ],
            options={
                'db_table': 'CarModel',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Color',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('color_name', models.CharField(db_column='ColorName', max_length=70, unique=True)),
            ],
            options={
                'db_table': 'Color',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('first_name', models.CharField(db_column='FirstName', max_length=50)),
                ('last_name', models.CharField(db_column='LastName', max_length=50)),
                ('phone_number', models.CharField(db_column='PhoneNumber', max_length=15)),
            ],
            options={
                'db_table': 'Customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, db_collation='Ukrainian_CI_AS', null=True)),
                ('object_repr', models.CharField(db_collation='Ukrainian_CI_AS', max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField(db_collation='Ukrainian_CI_AS')),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(db_collation='Ukrainian_CI_AS', max_length=100)),
                ('model', models.CharField(db_collation='Ukrainian_CI_AS', max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('app', models.CharField(db_collation='Ukrainian_CI_AS', max_length=255)),
                ('name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(db_collation='Ukrainian_CI_AS', max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField(db_collation='Ukrainian_CI_AS')),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DriveType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drive_type_name', models.CharField(db_column='DriveTypeName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'DriveType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(db_column='FirstName', max_length=50)),
                ('last_name', models.CharField(db_column='LastName', max_length=50)),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('phone_number', models.CharField(db_column='PhoneNumber', max_length=15)),
                ('address', models.CharField(blank=True, db_column='Address', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Employee',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EmployeePosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position_name', models.CharField(db_column='PositionName', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'EmployeePosition',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='EngineType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine_type_name', models.CharField(db_column='EngineTypeName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'EngineType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='MsreplicationOptions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('optname', models.CharField(db_collation='Ukrainian_CI_AS', max_length=128)),
                ('value', models.BooleanField()),
                ('major_version', models.IntegerField()),
                ('minor_version', models.IntegerField()),
                ('revision', models.IntegerField()),
                ('install_failures', models.IntegerField()),
            ],
            options={
                'db_table': 'MSreplication_options',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Part',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_name', models.CharField(db_column='PartName', max_length=100)),
                ('weight', models.DecimalField(db_column='Weight', decimal_places=2, max_digits=10)),
                ('dimensions', models.CharField(blank=True, db_column='Dimensions', max_length=100, null=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=250, null=True)),
                ('quantity_per_package', models.IntegerField(db_column='QuantityPerPackage')),
                ('price_per_package', models.DecimalField(db_column='PricePerPackage', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'Part',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartBrand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('brand_name', models.CharField(db_column='BrandName', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'PartBrand',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartInStation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'PartInStation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PartType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('part_type_name', models.CharField(db_column='PartTypeName', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'PartType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='PaymentStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('payment_name', models.CharField(db_column='PaymentName', max_length=70, unique=True)),
            ],
            options={
                'db_table': 'PaymentStatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.DecimalField(blank=True, db_column='TotalPrice', decimal_places=2, max_digits=10, null=True)),
                ('order_date', models.DateTimeField(blank=True, db_column='OrderDate', null=True)),
                ('order_number', models.CharField(blank=True, db_column='OrderNumber', max_length=50, null=True)),
            ],
            options={
                'db_table': 'ProcurementOrder',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(blank=True, db_column='StatusName', max_length=50, null=True)),
            ],
            options={
                'db_table': 'ProcurementStatus',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProcurementUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(db_column='Quantity')),
                ('price_per_unit', models.DecimalField(blank=True, db_column='PricePerUnit', decimal_places=2, max_digits=10, null=True)),
            ],
            options={
                'db_table': 'ProcurementUnit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ProvidedService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('provided_date', models.DateTimeField(blank=True, db_column='ProvidedDate', null=True)),
            ],
            options={
                'db_table': 'ProvidedService',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RequiredPart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'RequiredPart',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_name', models.CharField(db_column='ServiceName', max_length=100, unique=True)),
                ('description', models.CharField(blank=True, db_column='Description', max_length=255, null=True)),
                ('price', models.DecimalField(db_column='Price', decimal_places=2, max_digits=10)),
            ],
            options={
                'db_table': 'Service',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ServiceType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('service_type_name', models.CharField(db_column='ServiceTypeName', max_length=100, unique=True)),
            ],
            options={
                'db_table': 'ServiceType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SptFallbackDb',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xserver_name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=30)),
                ('xdttm_ins', models.DateTimeField()),
                ('xdttm_last_ins_upd', models.DateTimeField()),
                ('xfallback_dbid', models.SmallIntegerField(blank=True, null=True)),
                ('name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=30)),
                ('dbid', models.SmallIntegerField()),
                ('status', models.SmallIntegerField()),
                ('version', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'spt_fallback_db',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SptFallbackDev',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xserver_name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=30)),
                ('xdttm_ins', models.DateTimeField()),
                ('xdttm_last_ins_upd', models.DateTimeField()),
                ('xfallback_low', models.IntegerField(blank=True, null=True)),
                ('xfallback_drive', models.CharField(blank=True, db_collation='Ukrainian_CI_AS', max_length=2, null=True)),
                ('low', models.IntegerField()),
                ('high', models.IntegerField()),
                ('status', models.SmallIntegerField()),
                ('name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=30)),
                ('phyname', models.CharField(db_collation='Ukrainian_CI_AS', max_length=127)),
            ],
            options={
                'db_table': 'spt_fallback_dev',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SptFallbackUsg',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('xserver_name', models.CharField(db_collation='Ukrainian_CI_AS', max_length=30)),
                ('xdttm_ins', models.DateTimeField()),
                ('xdttm_last_ins_upd', models.DateTimeField()),
                ('xfallback_vstart', models.IntegerField(blank=True, null=True)),
                ('dbid', models.SmallIntegerField()),
                ('segmap', models.IntegerField()),
                ('lstart', models.IntegerField()),
                ('sizepg', models.IntegerField()),
                ('vstart', models.IntegerField()),
            ],
            options={
                'db_table': 'spt_fallback_usg',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SptMonitor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lastrun', models.DateTimeField()),
                ('cpu_busy', models.IntegerField()),
                ('io_busy', models.IntegerField()),
                ('idle', models.IntegerField()),
                ('pack_received', models.IntegerField()),
                ('pack_sent', models.IntegerField()),
                ('connections', models.IntegerField()),
                ('pack_errors', models.IntegerField()),
                ('total_read', models.IntegerField()),
                ('total_write', models.IntegerField()),
                ('total_errors', models.IntegerField()),
            ],
            options={
                'db_table': 'spt_monitor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Station',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(db_column='Address', max_length=100)),
                ('phone_number', models.CharField(db_column='PhoneNumber', max_length=25)),
            ],
            options={
                'db_table': 'Station',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StoragePlacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(blank=True, db_column='Quantity', null=True)),
                ('placement_date', models.DateTimeField(blank=True, db_column='PlacementDate', null=True)),
            ],
            options={
                'db_table': 'StoragePlacement',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.CharField(blank=True, db_column='Email', max_length=100, null=True)),
                ('phone_number', models.CharField(blank=True, db_column='PhoneNumber', max_length=15, null=True)),
                ('supplier_name', models.CharField(blank=True, db_column='SupplierName', max_length=100, null=True)),
            ],
            options={
                'db_table': 'Supplier',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SuspensionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('suspension_type_name', models.CharField(db_column='SuspensionTypeName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'SuspensionType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TransmissionType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transmission_type_name', models.CharField(db_column='TransmissionTypeName', max_length=50, unique=True)),
            ],
            options={
                'db_table': 'TransmissionType',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Visit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateTimeField(auto_now_add=True, db_column='VisitDate')),
                ('planned_end_date', models.DateTimeField(blank=True, db_column='PlannedEndDate', null=True)),
                ('actual_end_date', models.DateTimeField(blank=True, db_column='ActualEndDate', null=True)),
                ('details', models.CharField(blank=True, db_column='Details', max_length=500, null=True)),
                ('visit_number', models.IntegerField(db_column='VisitNumber')),
                ('price', models.DecimalField(blank=True, db_column='Price', decimal_places=2, max_digits=10, null=True)),
                ('payment_date', models.DateTimeField(blank=True, db_column='PaymentDate', null=True)),
            ],
            options={
                'db_table': 'Visit',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VisitService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.IntegerField(db_column='Quantity')),
            ],
            options={
                'db_table': 'VisitService',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VisitStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status_name', models.CharField(db_column='StatusName', max_length=70, unique=True)),
            ],
            options={
                'db_table': 'VisitStatus',
                'managed': False,
            },
        ),
    ]
